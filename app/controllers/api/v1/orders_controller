# app/controllers/orders_controller.rb

class Api::V1::OrdersController < ApplicationController
  before_action :authenticate_user
  before_action :find_creator, only: [:create]
  before_action :find_order, only: [:accept, :reject]

  # Create a new order request
  def create
    if current_user.client?
      @order = current_user.orders.build(order_params)
      @order.creator = @creator
      if @order.save
        render json: @order, status: :created
      else
        render json: { error: 'Failed to create the order request' }, status: :unprocessable_entity
      end
    else
      render json: { error: 'Only clients can create orders' }, status: :forbidden
    end
  end

  # Accept an order request (increases creator's balance)
  def accept
    if current_user.creator? && @order.creator == current_user
      # Check if the order is pending
      if @order.pending?
        # Update the order status to accepted
        @order.accept!
        
        # Increase the creator's balance
        @order.creator.increment!(:balance, @order.price)
        
        render json: { message: 'Order accepted' }
      else
        render json: { error: 'Only pending orders can be accepted' }, status: :unprocessable_entity
      end
    else
      render json: { error: 'Only the creator can accept orders' }, status: :forbidden
    end
  end

  # Reject an order request
  def reject
    if current_user.creator? && @order.creator == current_user
      # Check if the order is pending
      if @order.pending?
        # Update the order status to rejected
        @order.reject!
        render json: { message: 'Order rejected' }
      else
        render json: { error: 'Only pending orders can be rejected' }, status: :unprocessable_entity
      end
    else
      render json: { error: 'Only the creator can reject orders' }, status: :forbidden
    end
  end

  private

  # Order params
  def order_params
    params.require(:order).permit(:title, :description, :length, :price)
  end

  # Find the creator by ID
  def find_creator
    @creator = User.find(params[:creator_id])
  end

  # Find the order by ID
  def find_order
    @order = Order.find(params[:id])
  end

  # Authentication logic (you can use a gem like Devise)
  def authenticate_user
    unless current_user
      render json: { error: 'Please log in to perform this action' }, status: :unauthorized
    end
  end
end
